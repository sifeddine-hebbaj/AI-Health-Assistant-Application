version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: ai-health-postgres
    environment:
      POSTGRES_DB: ai_health_db
      POSTGRES_USER: ai_health_user
      POSTGRES_PASSWORD: ai_health_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_health_user -d ai_health_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    container_name: ai-health-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://ai_health_user:ai_health_password@postgres:5432/ai_health_db
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - EMAIL_USER=your-email@gmail.com
      - EMAIL_PASS=your-email-password
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: ["node", "server.js"]

  # Frontend React App
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: ai-health-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: ai-health-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: ai-health-network